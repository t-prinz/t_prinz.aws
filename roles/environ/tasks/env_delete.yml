---

- name: gather information about the VPC
  amazon.aws.ec2_vpc_net_info:
    aws_access_key: "{{ aws_access_key_id }}"
    aws_secret_key: "{{ aws_secret_access_key }}"
    filters:
      "tag:Name": "{{ aws_vpc_name }}"
    region: "{{ aws_region }}"
  register: vpc_info

- name: print VPC information
  debug:
    var: vpc_info
    verbosity: 1

- block:

  - name: print VPC id information
    debug:
      var: vpc_info.vpcs[0].id
      verbosity: 1

  - name: remove security group
    amazon.aws.ec2_group:
      aws_access_key: "{{ aws_access_key_id }}"
      aws_secret_key: "{{ aws_secret_access_key }}"
      name: "{{ aws_securitygroup_name }}"
      region: "{{ aws_region }}"
      state: absent

  - name: remove subnet for VPC
    amazon.aws.ec2_vpc_subnet:
      aws_access_key: "{{ aws_access_key_id }}"
      aws_secret_key: "{{ aws_secret_access_key }}"
      az: "{{ aws_az }}"
      cidr: "{{ aws_subnet_cidr_block }}"
      region: "{{ aws_region }}"
      state: absent
      vpc_id: "{{ vpc_info.vpcs[0].id }}"
    register: subnet_info

  - name: remove internet gateway for VPC
    amazon.aws.ec2_vpc_igw:
      aws_access_key: "{{ aws_access_key_id }}"
      aws_secret_key: "{{ aws_secret_access_key }}"
      region: "{{ aws_region }}"
      state: absent
      vpc_id: "{{ vpc_info.vpcs[0].id }}"
    register: igw_info

  - name: remove VPC
    amazon.aws.ec2_vpc_net:
      aws_access_key: "{{ aws_access_key_id }}"
      aws_secret_key: "{{ aws_secret_access_key }}"
      name: "{{ aws_vpc_name }}"
      region: "{{ aws_region }}"
      cidr_block: "{{ aws_vpc_cidr_block }}"
      state: absent

  when: vpc_info.vpcs is defined and vpc_info.vpcs[0] is defined
