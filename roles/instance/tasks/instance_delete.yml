---
- name: get instance info
  amazon.aws.ec2_instance_info:
    aws_access_key: "{{ aws_access_key_id }}"
    aws_secret_key: "{{ aws_secret_access_key }}"
    filters:
      "tag:Name": "{{ aws_base_name }}-{{ aws_instance.ansible_instance_shortname }}"
    region: "{{ aws_region }}"
  register: instance_info

- name: Block to delete the instance
  block:

    - name: print instance info
      debug:
        var: instance_info.instances[0]
#        verbosity: 1

    - name: print instance info id
      debug:
        msg: "Deleting instance {{ inventory_hostname }} with instand_id:  {{ instance_info.instances[0].instance_id }}"

  when: instance_info.instances[0] is defined

#    - name: gather information about the VPC
#      amazon.aws.ec2_vpc_net_info:
#        aws_access_key: "{{ aws_access_key_id }}"
#        aws_secret_key: "{{ aws_secret_access_key }}"
#        filters:
#          "tag:Name": "{{ aws_vpc_name }}"
#        region: "{{ aws_region }}"
#      register: vpc_info

#    - name: print VPC information
#      debug:
#        var: vpc_info
#        verbosity: 1

#    - name: print VPC id information
#      debug:
#        var: vpc_info.vpcs[0].id
#        verbosity: 1

#      tag:Name: "{{ item.tags.Name }}"
- name: get elastic ip info
  community.aws.ec2_eip_info:
    aws_access_key: "{{ aws_access_key_id }}"
    aws_secret_key: "{{ aws_secret_access_key }}"
    filters:
      "tag:Name": "{{ aws_base_name }}-{{ aws_instance.ansible_instance_shortname }}"
    region: "{{ aws_region }}"
  register: eip_info

- name: print elastic ip info
  debug:
    var: eip_info
#    verbosity: 1
  when: eip_info.addresses[0] is defined

- name: get route53 zone id
  community.aws.route53_zone:
    aws_access_key: "{{ aws_access_key_id }}"
    aws_secret_key: "{{ aws_secret_access_key }}"
    zone: "{{ aws_route53_zone }}"
  register: route53_zone_info

- name: print route53_zone_info
  debug:
    var: route53_zone_info

- name: get route53 dns info for the instances
  community.aws.route53_info:
    aws_access_key: "{{ aws_access_key_id }}"
    aws_secret_key: "{{ aws_secret_access_key }}"
    type: A
    query: record_sets
    hosted_zone_id: "{{ route53_zone_info.zone_id }}"
    max_items: "{{ '1'|int }}"
    start_record_name: "{{ eip_info.addresses[0].tags.Name }}.{{ aws_route53_zone }}"
  when: eip_info.addresses[0].tags.Name is defined
  register: route53_out

- name: print route53 dns info
  debug:
    var: route53_out
    verbosity: 1

#    - name: delete resources associated with the instances
#      block:
#        - name: delete the route53 dns entries
#          community.aws.route53:
#            aws_access_key: "{{ aws_access_key_id }}"
#            aws_secret_key: "{{ aws_secret_access_key }}"
#            record: "{{ item.ResourceRecordSets[0].Name }}"
#            state: absent
#            ttl: "{{ item.ResourceRecordSets[0].TTL }}"
#            type: "{{ item.ResourceRecordSets[0].Type }}"
#            value: "{{ item.ResourceRecordSets[0].ResourceRecords[0].Value }}"
#            wait: Yes
#            zone: "{{ aws_route53_zone }}"
#          when: item.ResourceRecordSets[0].Name is defined
#          with_items: "{{ route53_out.results }}"

#        - name: print elastic ip info bub
#          debug:
#            msg: "eip_info.results is {{ item }}"
#          when: item.addresses[0].instance_id is defined
#          with_items: "{{ eip_info.results }}"

#        - name: delete the elastic ip's from the instances
#          community.aws.ec2_eip:
#            aws_access_key: "{{ aws_access_key_id }}"
#            aws_secret_key: "{{ aws_secret_access_key }}"
#            device_id: "{{ item.addresses[0].instance_id }}"
#            public_ip: "{{ item.addresses[0].public_ip }}"
#            region: "{{ aws_region }}"
#            release_on_disassociation: yes
#            state: absent
#          when: item.addresses[0].instance_id is defined
#          with_items: "{{ eip_info.results }}"

#        - name: delete the instances
#          amazon.aws.ec2_instance:
#            aws_access_key: "{{ aws_access_key_id }}"
#            aws_secret_key: "{{ aws_secret_access_key }}"
#            image_id: "{{ item.image_id }}"
#            instance_ids: "{{ item.instance_id }}"
#            instance_type: "{{ item.instance_type }}"
#            name: "{{ item.tags.Name }}"
#            region: "{{ aws_region }}"
#            state: absent
#          with_items: "{{ instance_info.instances }}"
